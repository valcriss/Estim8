<!DOCTYPE html>
<html>
  <head>
    <title>Room {{roomName}} - Estim8</title>
  </head>
  <body>
    <h1>Room : {{roomName}}</h1>
    <p>ID : <strong>{{roomId}}</strong></p>
    <p>
      Lien de partage :
      <code id="room-link">http://localhost:3000/room/{{roomId}}</code>
      <button onclick="copyRoomLink()">Copier</button>
    </p>
    <h2>Participants</h2>
    <ul id="participants">
      {{#participants}}
        <li>{{name}}</li>
      {{/participants}}
    </ul>
    <p>Connect√© en tant que <strong>{{currentName}}</strong></p>
    <h2>Estimation</h2>
    <div id="deck">
      <button onclick="vote('1')">1</button>
      <button onclick="vote('2')">2</button>
      <button onclick="vote('3')">3</button>
      <button onclick="vote('5')">5</button>
      <button onclick="vote('8')">8</button>
      <button onclick="vote('13')">13</button>
      <button onclick="vote('?')">?</button>
    </div>

    <p>
      <button onclick="startEstimation()">R√©v√©ler les votes</button>
      <button onclick="revealVotes()">R√©v√©ler les votes</button>
    </p>

    <ul id="vote-results"></ul>
    <p><a href="/">‚Üê Retour</a></p>
    <script>
      function copyRoomLink() {
        const link = document.getElementById('room-link').innerText;
        navigator.clipboard.writeText(link).then(() => {
          alert('Lien copi√© dans le presse-papiers !');
        });
      }
    </script>
    <script src="/socket.io/socket.io.js"></script>
    <script src="/js/clientId.js"></script>
    <script>
      const socket = io();
      const roomId = '{{roomId}}';
      const pseudo = '{{currentName}}';
      const participantId = '{{participantId}}';
      const clientId = getClientId();
      let roomParticipants = {}
      socket.emit('join-room', { roomId, clientId, pseudo });

      // Remplacer toute la liste au d√©but
     socket.on('room-participants', ({ participants }) => {
      console.log('room-participants',participants)
      roomParticipants = {}
      participants.forEach((p) => {
          roomParticipants[p.id] = p.name;
        });
      updateParticipantsList()
      });

      // Mise √† jour live
      socket.on('participant-joined', ({ name, id }) => {
        console.log('participant-joined',name,id)
        roomParticipants[id] = name;
        updateParticipantsList()
      });

      socket.on('participant-left', ({ name }) => {
        console.log('participant-left',name)
        let toDelete = null
        for (const [pId, pName] of Object.entries(roomParticipants)) {
          if (pName === name) {
            toDelete = key;
          }
        }
        if(toDelete != null)
        {
          delete roomParticipants[toDelete]
        }
        updateParticipantsList()
      });

      socket.on('votes-revealed', ({ votes }) => {
        const ul = document.getElementById('vote-results');
        ul.innerHTML = '';
        votes.forEach(([pid, value]) => {
          const li = document.createElement('li');
          li.innerText = `Participant ${pid} : ${value}`;
          ul.appendChild(li);
        });
      });

      socket.on('participant-voted', ({ participantId }) => {
        console.log(`üîí ${participantId} a vot√©`);
      });

      function updateParticipantsList()
      {
        const ul = document.getElementById('participants');
        ul.innerHTML = '';
        for (const [pId, pName] of Object.entries(roomParticipants)) {
          const li = document.createElement('li');
          li.innerText = pName;
          li.dataset.pid = pId;
          ul.appendChild(li);
        };
      }

      function vote(value) {
        console.log(`üîí Envoi ${pseudo} a vot√© ${value}`);
        socket.emit('vote', { roomId, participantId, value });
      }

      function revealVotes() {
        socket.emit('reveal-votes', roomId);
      }

      function startEstimation() {
        socket.emit('start-estimation', roomId);
      }

      socket.on('estimation-started', () => {
        alert('Nouvelle estimation lanc√©e !');
        // Tu peux ici r√©initialiser l‚ÄôUI si tu veux
      });


    </script>
  </body>
</html>
